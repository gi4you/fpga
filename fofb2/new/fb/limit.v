// -------------------------------------------------------------
//
// File Name: hdlsrc\limit.v
// Created: 2014-06-27 12:59:58
// Generated by MATLAB 7.6 and Simulink HDL Coder 1.3
//
//
// -------------------------------------------------------------


`timescale 1 ns / 1 ns

module over_limit
          (
           Data_In,
		   LIMIT,
           //Data_o_20b,
           Data_o
          );


  input   signed [31:0] Data_In;  // int32
  input   signed [31:0] LIMIT; 
  //output  signed [19:0] Data_o_20b;  // sfix20
  output  signed [31:0] Data_o;  // int32


  wire signed [31:0] m_2_out1;  // int32
  //wire signed [19:0] Gateway_In2_out1;  // sfix20
  wire signed [31:0] m_2_upper_limit_out;  // int32
  wire signed [31:0] m_2_lower_limit_out;  // int32


// Saturation block implementation

// Upper Limit (output data type)
  //assign m_2_upper_limit_out = 32'h0007FFFD;
  assign m_2_upper_limit_out = LIMIT;

// Lower Limit (output data type)
  //assign m_2_lower_limit_out = 32'hFFF80003;
  assign m_2_lower_limit_out = LIMIT * -1;

// Mux for Saturation logic:
// if input is > upper limit, assign upper limit to output
// else if input is < lower limit, assign lower limit to output
// else assign input to output
// if upper limit is equal to lower limit, assign upper limit to output
// 
  assign m_2_out1 = (Data_In > $signed(m_2_upper_limit_out)) ? m_2_upper_limit_out :
                    (Data_In < $signed(m_2_lower_limit_out)) ? m_2_lower_limit_out :
                    Data_In;

//  assign Gateway_In2_out1 = ((m_2_out1[31] == 1'b0 & m_2_out1[30:19] != 12'b000000000000) || (m_2_out1[31] == 1'b0 && m_2_out1[19:0] == 20'b01111111111111111111) // special case0
//) ? 20'b01111111111111111111 : 
//      (m_2_out1[31] == 1'b1 && m_2_out1[30:19] != 12'b111111111111) ? 20'b10000000000000000000 : m_2_out1[19:0];

//  assign Data_o_20b = Gateway_In2_out1;
  assign Data_o = m_2_out1;

endmodule  // limit

